-- Table

cells = {}
pageAmount = 1
currentPage = 1
letters = {"A", "B", "C", "D", "E", "F", "G", "H", "I"}
menu = false
exit = false
saved = true
w, h = term.getSize()

-- Table Variable Syntax: table[page][column][row][value/position][x/y (only if position is selected before)]
x5 = 5
page = 1
for y = 2, 18 do
	for x = 1, #letters do
		cells[#cells + 1] = {page, "", x5, y}
		x5 = x5 + 5
	end
	x5 = 5
end

function drawScreen(page)
	term.clear()
	term.setTextColor(colors.white)
	for y = 2, h - 1 do
		if (y % 2) == 0 then
			white = true
		else
			white = false
		end
		for x = 5, w - 1, 5 do
			term.setCursorPos(x, y)
			if white then
				term.setBackgroundColor(colors.white)
			else
				term.setBackgroundColor(colors.lightGray)
			end
			write("     ")
			white = not white
		end
	end
	term.setBackgroundColor(colors.gray)
	for x = 1, w do
		term.setCursorPos(x, 1)
		write(" ")
		term.setCursorPos(x, h)
		write(" ")
	end
	for y = 1, h do
		term.setCursorPos(1, y)
		write("    ")
		term.setCursorPos(w - 1, y)
		write("  ")
	end
	term.setBackgroundColor(colors.black)
	term.setCursorPos(w, 2)
	write("^")
	term.setCursorPos(w, 3)
	write("|")
	term.setCursorPos(w, h - 2)
	write("|")
	term.setCursorPos(w, h - 1)
	write("v")
	term.setBackgroundColor(colors.gray)
	term.setCursorPos(w - string.len("Page " .. tostring(page)) - 1, h)
	write("Page " .. tostring(page))
	x = 7
	for i = 1, #letters do
		term.setCursorPos(x, 1)
		write(letters[i])
		x = x + 5
	end
	yaxistext = (page * 17) - 17
	y = 2
	for i = 1, 17 do
		if yaxistext + i < 10 then
			term.setCursorPos(4, y)
		elseif yaxistext + i >= 10 and yaxistext + i < 100 then
			term.setCursorPos(3, y)
		elseif yaxistext + i >= 100 then
			term.setCursorPos(2, y)
		end
		write(yaxistext + i)
		y = y + 1
	end
	term.setBackgroundColor(colors.black)
	term.setCursorPos(1, h)
	write("MENU")
	term.setBackgroundColor(colors.gray)
	term.setCursorPos(6, h)
	write("Cell:")
	cellsonpage = (page * 153) - 153
	term.setTextColor(colors.black)
	for i = cellsonpage + 1, cellsonpage + 153 do
		if (cells[i][3] % 2) ~= 0 then
			term.setBackgroundColor(colors.white)
		else
			term.setBackgroundColor(colors.lightGray)
		end
		term.setCursorPos(cells[i][3], cells[i][4])
		term.write(string.sub(cells[i][2], 1, 4))
	end
end

function click(p1, p2, p3)
	if p2 > 0 and p2 < 5 and p3 == h then
		menu = true
	end
	for i = 1, #cells do
		if cells[i][1] == 1 and p2 >= cells[i][3] and p2 <= cells[i][3] + 4 and cells[i][4] == p3 then
			term.setCursorPos(w - 8, h)
			term.setBackgroundColor(colors.black)
			term.setTextColor(colors.white)
			write("OK")
			term.setCursorPos(w - 5, h)
			write("CANCEL")
			term.setTextColor(colors.white)
			term.setBackgroundColor(colors.gray)
			term.setCursorPos(w - 6, h)
			write(" ")
			if cells[i][2] == "" then
				text = ""
			else
				text = cells[i][2]
			end
			term.setCursorPos(13, h)
			write(text)
			while true do
				event, param1, param2, param3 = os.pullEvent()
				if event == "key" then
					if param1 == 14 then
						term.setCursorPos(13, h)
						for i = 1, string.len(text) do
							write(" ")
						end
						text = string.sub(text, 1, string.len(text) - 1)
						term.setCursorPos(13, h)
						write(text)
					elseif param1 == 28 then
						cells[i][2] = text
						break
					end
				end
				if event == "char" then
					text = text .. param1
					term.setCursorPos(13, h)
					write(text)
				elseif event == "mouse_click" then
					if param2 > w - 9 and param2 < w - 6 and param3 == h then
						cells[i][2] = text
						saved = false
						break
					elseif param2 > w - 6 and param2 < w + 1 and param3 == h then
						break
					end
				end
			end
		end
	end
end

function drawButton(x1, y1, text)
	for y = y1, y1 + 3 do
		for x = x1, x1 + 1 + string.len(text) do
			term.setCursorPos(x, y)
			write(" ")
		end
	end
	term.setCursorPos(x1 + 1, y1 + 1)
	write(text)
end

function showDialog(title, text, type)
	if type == "yesnocancel" then
		term.setTextColor(colors.white)
		term.setBackgroundColor(colors.gray)
		term.setCursorPos(w - (w/2) - 10, h - (h/2) - 4)
		for i = 1, 22 do
			write(" ")
		end
		term.setCursorPos(w - (w/2) - 9, h - (h/2) - 4)
		write(title)
		term.setBackgroundColor(colors.lightGray)
		for y = h - (h/2) - 3, h - (h/2) + 6 do
			for x = w - (w/2) - 10, w - (w/2) + 11 do
				term.setCursorPos(x, y)
				write(" ")
			end
		end
		term.setCursorPos(w - (w/2) - 9, h - (h/2) - 2)
		write(string.sub(text, 1, 20))
		term.setCursorPos(w - (w/2) - 9, h - (h/2) - 1)
		write(string.sub(text, 21, 40))
		term.setCursorPos(w - (w/2) - 9, h - (h/2))
		write(string.sub(text, 41, 60))
		term.setBackgroundColor(colors.black)
		term.setCursorPos(w - (w/2) - 6, h - (h/2) + 6)
		write("YES")
		term.setCursorPos(w - (w/2) - 2, h - (h/2) + 6)
		write("NO")
		term.setCursorPos(w - (w/2) + 1, h - (h/2) + 6)
		write("CANCEL")
	elseif type == "ok" then
		term.setTextColor(colors.white)
		term.setBackgroundColor(colors.gray)
		term.setCursorPos(w - (w/2) - 10, h - (h/2) - 4)
		for i = 1, 22 do
			write(" ")
		end
		term.setCursorPos(w - (w/2) - 9, h - (h/2) - 4)
		write(title)
		term.setBackgroundColor(colors.lightGray)
		for y = h - (h/2) - 3, h - (h/2) + 6 do
			for x = w - (w/2) - 10, w - (w/2) + 11 do
				term.setCursorPos(x, y)
				write(" ")
			end
		end
		term.setCursorPos(w - (w/2) - 9, h - (h/2) - 2)
		write(string.sub(text, 1, 20))
		term.setCursorPos(w - (w/2) - 9, h - (h/2) - 1)
		write(string.sub(text, 21, 40))
		term.setCursorPos(w - (w/2) - 9, h - (h/2))
		write(string.sub(text, 41, 60))
		term.setBackgroundColor(colors.black)
		term.setCursorPos(w - (w/2), h - (h/2) + 6)
		write("OK")
	elseif type == "input" then
		term.setTextColor(colors.white)
		term.setBackgroundColor(colors.gray)
		term.setCursorPos(w - (w/2) - 10, h - (h/2) - 4)
		for i = 1, 22 do
			write(" ")
		end
		term.setCursorPos(w - (w/2) - 9, h - (h/2) - 4)
		write(title)
		term.setBackgroundColor(colors.lightGray)
		for y = h - (h/2) - 3, h - (h/2) + 6 do
			for x = w - (w/2) - 10, w - (w/2) + 11 do
				term.setCursorPos(x, y)
				write(" ")
			end
		end
		term.setCursorPos(w - (w/2) - 9, h - (h/2) - 2)
		write(string.sub(text, 1, 20))
		term.setCursorPos(w - (w/2) - 9, h - (h/2) - 1)
		write(string.sub(text, 21, 40))
		term.setCursorPos(w - (w/2) - 9, h - (h/2))
		write(string.sub(text, 41, 60))
		term.setBackgroundColor(colors.gray)
		term.setCursorPos(w - (w/2) - 9, h - (h/2) + 2)
		for i = 1, 20 do
			write(" ")
		end
		term.setBackgroundColor(colors.black)
		term.setCursorPos(w - (w/2) - 3, h - (h/2) + 6)
		write("OK")
		term.setCursorPos(w - (w/2), h - (h/2) + 6)
		write("CANCEL")
	end
	text = ""
	while true do
		if type == "yesnocancel" then
			event, param1, param2, param3 = os.pullEvent()
			if event == "mouse_click" then
				if param2 > w - (w/2) - 6 and param2 < w - (w/2) - 3 and param3 == h - (h/2) + 6 then
					return true
				elseif param2 > w - (w/2) - 2 and param2 < w - (w/2) and param3 == h - (h/2) + 6 then
					return false
				elseif param2 > w - (w/2) and param2 < w - (w/2) + 7 and param3 == h - (h/2) + 6 then
					return 0
				end
			end
			return true
		elseif type == "ok" then
			event, param1, param2, param3 = os.pullEvent()
			if event == "mouse_click" then
				if param2 > w - (w/2) and param2 < w - (w/2) + 2 and param3 == h - (h/2) + 6 then
					return true
				end
			end
		elseif type == "input" then
			event, param1, param2, param3 = os.pullEvent()
			if event == "key" then
				if param1 == 14 then
					text = string.sub(text, 1, string.len(text) - 1)
				end
			end
			if event == "mouse_click" then
				if param2 > w - (w/2) - 3 and param2 < w - (w/2) - 1 and param3 == h - (h/2) + 6 then
					return text
				elseif param2 > w - (w/2) and param2 < w - (w/2) + 6 and param3 == h - (h/2) + 6 then
					return 0
				end
			elseif event == "char" then
				text = text .. param1
			end
			term.setTextColor(colors.white)
			term.setBackgroundColor(colors.gray)
			term.setCursorPos(w - (w/2) - 9, h - (h/2) + 2)
			for i = 1, 20 do
				write(" ")
			end
			term.setCursorPos(w - (w/2) - 9, h - (h/2) + 2)
			write(text)
		end
	end
end

function showMenu()
	term.setTextColor(colors.white)
	term.setBackgroundColor(colors.white)
	term.clear()
	term.setBackgroundColor(colors.lightGray)
	drawButton(1, 2, "Load")
	drawButton(w - 1 - string.len("Save"), 2, "Save")
	drawButton(1, 7, "Help")
	drawButton(w - 1 - string.len("Info"), 7, "Info")
	drawButton(1, 12, "Exit")
	while true do
		event, param1, param2, param3 = os.pullEvent()
		if event == "mouse_click" then
			if param2 > 0 and param2 < 7 and param3 > 1 and param3 < 6 then
				input = 0
				while input == 0 do
					input = showDialog("Save file", "Enter the path of your file", "input")
				end
				file = fs.open(input, "r")
				filelines = file.readAll()
				cells = textutils.unserialize(filelines)
				file.close()
				saved = true
				break
			end
			if param2 > w - 2 - string.len("Save") and param2 < w and param3 > 1 and param3 < 6 then
				input = 0
				while input == 0 do
					input = showDialog("Save file", "Enter the path of your file", "input")
				end
				file = fs.open(input, "w")
				file.write(textutils.serialize(cells))
				file.close()
				saved = true
				break
			end
			if param2 > 0 and param2 < 7 and param3 > 6 and param3 < 11 then
				showDialog("Help", "Help will be implemented in the next version.", "ok")
				break
			end
			if param2 > w - 2 - string.len("Save") and param2 < w and param3 > 6 and param3 < 11 then
				showDialog("Info", 'Written by A. "kornichen" Korn  (c) 2014 A. Korn. All rights reserved.', "ok")
				break
			end
			if param2 > 0 and param2 < 7 and param3 > 11 and param3 < 16 then
				input = showDialog("Exit without saving?", "Do you want to save the opened file before exiting?", "yesnocancel")
				if input == true then
					input = 0
					while input == 0 do
						input = showDialog("Save file", "Enter the path of your file", "input")
					end
					file = fs.open(input, "w")
					file.write(textutils.serialize(cells))
					file.close()
					saved = true
					exit = true
					break
				elseif input == false then
					exit = true
					break
				elseif input == 0 then
					break
				end
			end
		end
	end
end

drawScreen(currentPage)

while not exit do
	event, param1, param2, param3 = os.pullEvent()
	if event == "mouse_click" then
		click(param1, param2, param3)
	end
	drawScreen(currentPage)
	if menu then
		menu = false
		showMenu()
	end
end